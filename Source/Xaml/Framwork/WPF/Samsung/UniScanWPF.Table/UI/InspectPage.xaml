<UserControl x:Class="UniScanWPF.Table.UI.InspectPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             Focusable="True" ClipToBounds="True"  
             RenderOptions.BitmapScalingMode="HighQuality" Loaded="UserControl_Loaded" IsVisibleChanged="UserControl_IsVisibleChanged">
    <Grid>
        <DockPanel>
            <Grid DockPanel.Dock="Top">
                <Label Content="Inspect" BorderThickness="1" BorderBrush="Black" FontSize="26"
                    Background="{DynamicResource MainBrush}" 
                    Foreground="{DynamicResource FontWhiteBrush}" 
                    Style="{DynamicResource BasicLabel}"/>
            </Grid>
            <StackPanel Name="MenuPanel" DockPanel.Dock="Right" Width="75">
                <Button Click="StartButton_Click" Margin="1" Height="75" Style="{StaticResource DefaultButton}" Background="White" FontSize="16" FontWeight="Bold" ToolTip="Start" IsEnabled="{Binding Startable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/Start.png"/>
                        <TextBlock Text="Start" FontSize="16" TextAlignment="Center" Grid.Row="1"/>
                    </Grid>
                </Button>
                <Button Click="StopButton_Click" Margin="1" Height="75" Style="{StaticResource DefaultButton}" Background="White" FontSize="16" FontWeight="Bold" ToolTip="Stop" IsEnabled="{Binding Stopable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/Stop1.png"/>
                        <TextBlock Text="Stop" FontSize="16" TextAlignment="Center" Grid.Row="1"/>
                    </Grid>
                </Button>
                <Button Click="ParamButton_Click" Margin="1" Height="75"  Style="{StaticResource DefaultButton}" Background="White" FontSize="16" FontWeight="Bold" ToolTip="Setting" IsEnabled="{Binding Startable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/Setting integrated.png"/>
                        <TextBlock Text="Param" FontSize="16" TextAlignment="Center" Grid.Row="1"/>
                    </Grid>
                </Button>
                <Button Click="HomeButton_Click" Margin="1" Height="75" Style="{StaticResource DefaultButton}" Background="White" FontSize="16" FontWeight="Bold" ToolTip="Setting" IsEnabled="{Binding Startable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Stretch="Uniform" Source="pack://siteoforigin:,,,/Resources/Align integrated.png"/>
                        <TextBlock Text="Home" FontSize="16" TextAlignment="Center" Grid.Row="1"/>
                    </Grid>
                </Button>
            </StackPanel>
            <DockPanel DockPanel.Dock="Right" Margin="2" Width="300">
                <Label DockPanel.Dock="Top" Content="Filter" BorderThickness="1" BorderBrush="Black" FontSize="26"
                    Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                <Grid DockPanel.Dock="Top" Height="40">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Name="PatternCheckBox" IsChecked="True" Checked="PatternCheckBox_Checked" Margin="1" Unchecked="PatternCheckBox_Unchecked" Style="{StaticResource BasicCheckBox}" BorderThickness="0" Content="Pattern" Foreground="{DynamicResource FontBrush}" Background="Black" FontSize="16" FontWeight="Bold"/>
                    <CheckBox Name="MarginCheckBox" Grid.Column="1" IsChecked="True" Checked="MarginCheckBox_Checked" Margin="1" Unchecked="MarginCheckBox_Unchecked" Style="{StaticResource BasicCheckBox}" Content="Margin" Foreground="{DynamicResource FontBrush}" Background="Black" FontSize="16" FontWeight="Bold"/>
                    <CheckBox Name="ShapeCheckBox" Grid.Column="2" IsChecked="True" Checked="ShapeCheckBox_Checked" Margin="1" Unchecked="ShapeCheckBox_Unchecked" Style="{StaticResource BasicCheckBox}" Content="Shape" Foreground="{DynamicResource FontBrush}" Background="Black" FontSize="16" FontWeight="Bold"/>
                </Grid>
                <Label DockPanel.Dock="Top" Content="Defect" BorderThickness="1" BorderBrush="Black" FontSize="26"
                    Background="{DynamicResource LightRedBrush}" 
                    Foreground="{DynamicResource FontBrush}" 
                    Style="{DynamicResource BasicLabel}"/>
                <DockPanel DockPanel.Dock="Top" Background="White" Height="40" Margin="2">
                    <Label DockPanel.Dock="Left" Content="Count" BorderThickness="1" BorderBrush="Black" FontSize="16" Padding="10, 5, 15, 5"
                            Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Border BorderBrush="Black" BorderThickness="1">
                        <TextBlock Text="{Binding ElementName=defectListBox, Path=Items.Count, Mode=OneWay}" VerticalAlignment="Center" TextAlignment="Center" FontWeight="Bold" FontSize="20"/>
                    </Border>
                </DockPanel>
                <ListBox x:Name="defectListBox"
                         ItemsSource="{Binding CombineDefectList, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                         DockPanel.Dock="Top"
                         Background="White"
                         HorizontalContentAlignment="Stretch" 
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                         VerticalContentAlignment="Stretch" 
                         Width="300" Height="500"
                         SelectionChanged="DefectListBox_SelectionChanged">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Padding" Value="0"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="{DynamicResource MainBrush}" BorderThickness="1">
                                <DockPanel>
                                    <Image Margin="1" DockPanel.Dock="Left" Width="96" Height="96" Source="{Binding Defect.Image}" Stretch="Uniform"/>
                                    <UniformGrid Columns="2" Rows="3">
                                        <Label Content="Type" BorderThickness="1" BorderBrush="Black" FontSize="14"
                                                    Background="{DynamicResource LightBrush}" 
                                                    Foreground="{DynamicResource FontBrush}" 
                                                    Style="{DynamicResource BasicLabel}"/>
                                        <Label Content="{Binding Defect.DefectType}" BorderThickness="1" BorderBrush="Black" FontSize="14"
                                               Background="White" 
                                               Foreground="{DynamicResource FontBrush}"
                                               Style="{DynamicResource BasicLabel}"/>
                                        <Label Content="Length" BorderThickness="1" BorderBrush="Black" FontSize="14"
                                                    Background="{DynamicResource LightBrush}" 
                                                    Foreground="{DynamicResource FontBrush}" 
                                                    Style="{DynamicResource BasicLabel}"/>
                                        <Label Content="{Binding Defect.Length}" BorderThickness="1" BorderBrush="Black" FontSize="14"
                                               ContentStringFormat="{}{0:0.#}"
                                                    Background="White" 
                                                    Foreground="{DynamicResource FontBrush}" 
                                                    Style="{DynamicResource BasicLabel}"/>
                                        <Label Content="Diff" BorderThickness="1" BorderBrush="Black" FontSize="14"
                                                    Background="{DynamicResource LightBrush}" 
                                                    Foreground="{DynamicResource FontBrush}" 
                                                    Style="{DynamicResource BasicLabel}"/>
                                        <Label Content="{Binding Defect.DiffValue}" BorderThickness="1" BorderBrush="Black" FontSize="14"
                                               ContentStringFormat="{}{0:0.#}"
                                                    Background="White" 
                                                    Foreground="{DynamicResource FontBrush}" 
                                                    Style="{DynamicResource BasicLabel}"/>
                                    </UniformGrid>
                                </DockPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <Border BorderThickness="1" BorderBrush="Black">
                    <Image Margin="1" DockPanel.Dock="Top" Source="{Binding BigDefectBitmapSource}" Stretch="Uniform"/>
                </Border>
            </DockPanel>
            <Grid Name="canvasGrid">
                <Grid Name="wholeGrid" Background="Black" ClipToBounds="True">
                    <Canvas Name="mainCanvas" Width="{Binding ElementName=mainCanvas, Path=ActualHeight, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SizeChanged="MainCanvas_SizeChanged">
                        <Canvas.RenderTransform>
                            <TransformGroup x:Name="transformGroup">
                                <TranslateTransform 
                                    X="{Binding TranslateX, UpdateSourceTrigger=PropertyChanged}"
                                    Y="{Binding TranslateY, UpdateSourceTrigger=PropertyChanged}"/>
                                <ScaleTransform 
                                    ScaleX="{Binding ScaleX, UpdateSourceTrigger=PropertyChanged}"
                                    ScaleY="{Binding ScaleY, UpdateSourceTrigger=PropertyChanged}"/>
                            </TransformGroup>
                        </Canvas.RenderTransform>

                        <Canvas Name="bgCanvas">
                            <Rectangle Name="ScanRegionLabel"
                                       Fill="White" Opacity="0.2"
                                       Canvas.Left="{Binding DispScanRegion.Left, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       Canvas.Top="{Binding DispScanRegion.Top, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       Width="{Binding DispScanRegion.Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       Height="{Binding DispScanRegion.Height, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>

                            <Rectangle Name="RobotWorkingRectangle"
                                       Stroke="{StaticResource RedBrush}"
                                       Canvas.Left="{Binding DispRobotRegion.Left, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       Canvas.Top="{Binding DispRobotRegion.Top, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       Width="{Binding DispRobotRegion.Width, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                       Height="{Binding DispRobotRegion.Height, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Canvas>

                        <Canvas Name="ImageCanvas">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform 
                                        ScaleX="{Binding ImageCanvasScale, Mode=OneWay}" 
                                        ScaleY="{Binding ImageCanvasScale, Mode=OneWay}"/>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            
                            <!--<Image Name="LightTuneImage"  Height="10000"
                                   Canvas.Left="{Binding Path=LightTuneResult.CanvasAxisPosition.Position[0], UpdateSourceTrigger=PropertyChanged}" 
                                   Canvas.Top="{Binding Path=LightTuneResult.CanvasAxisPosition.Position[1], UpdateSourceTrigger=PropertyChanged}"
                                   Source="{Binding Path=LightTuneResult.ResizeImage, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Name="LightTuneMessage" Content="{Binding Path=LightTuneResult.ExceptionMessage}" 
                                   Foreground="{StaticResource FontWhiteBrush}"
                                   Background="Transparent" FontSize="2000"
                                    Canvas.Left="{Binding Path=LightTuneResult.CanvasAxisPosition.Position[0], UpdateSourceTrigger=PropertyChanged}" 
                                    Canvas.Top="{Binding Path=LightTuneResult.CanvasAxisPosition.Position[1], UpdateSourceTrigger=PropertyChanged}"
                                   Width="6140"/>-->
                        </Canvas>

                        <Canvas>
                            <Label Name="HomeLabel" 
                                   Width="{Binding MarkSize.Width, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Height="{Binding MarkSize.Height, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   FontSize="{Binding MarkFontSize, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Canvas.Left="{Binding Path=HomeMarkPos.X, UpdateSourceTrigger=PropertyChanged}" 
                                   Canvas.Top="{Binding Path=HomeMarkPos.Y, UpdateSourceTrigger=PropertyChanged}"
                                   Style="{StaticResource CircleLabel}" Background="LightGray"  FontWeight="Bold"
                                   Content="H" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>

                            <Label Name="machineCircleLabel"
                                   Width="{Binding MarkSize.Width, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Height="{Binding MarkSize.Height, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   FontSize="{Binding MarkFontSize, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Canvas.Left="{Binding Path=CurMarkPos.X, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
                                   Canvas.Top="{Binding Path=CurMarkPos.Y, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                   Background="{Binding Path=CurMarkBrush, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
                                   Style="{StaticResource CircleLabel}" 
                                   FontWeight="Bold" Content="M" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"/>
                        </Canvas>

                        <Canvas Name="FigureLayoutCanvas">
                            <Canvas Name="ShapeLayoutCanvas" Opacity="0.7"/>
                            <Canvas Name="MarginLayoutCanvas" Opacity="0.7"/>
                            <Canvas Name="PatternLayoutCanvas" Opacity="0.7"/>
                            <Canvas Name="MeanderLayoutCanvas" Opacity="0.7"/>
                            <Canvas Name="SelectionLayoutCanvas" Opacity="1.0"/>
                            
                        </Canvas>

                    </Canvas>
                    <Thumb 
                        DragDelta="Thumb_DragDelta"
                               MouseWheel="Thumb_MouseWheel"
                           DragStarted="Thumb_DragStarted"
                               Opacity="0"/>
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10">
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Right">
                            <Button Click="ZoomIn_Button_Click"  Margin="2" Height="75" Width="75" Style="{StaticResource CircleButton}" Background="White" Opacity="0.7" FontSize="50" FontWeight="Bold">
                                <ContentControl>
                                    <TextBlock Margin="0, -14, 0, 0" Text="+"/>
                                </ContentControl>
                            </Button>
                            <Button Click="ZoomOut_Button_Click" Margin="2" Height="75" Width="75" Style="{StaticResource CircleButton}" Background="White" Opacity="0.7" FontSize="50" FontWeight="Bold">
                                <ContentControl>
                                    <TextBlock Margin="0, -14, 0, 0" Text="-"/>
                                </ContentControl>
                            </Button>
                            <Button Click="ZoomFit_Button_Click" Margin="2" Height="75" Width="75" Style="{StaticResource CircleButton}" Content="Fit" Background="White" Opacity="0.7" FontSize="20" FontWeight="Bold"/>
                            <CheckBox IsChecked="{Binding FigureVisible}" Margin="2" Height="75" Width="75" Style="{StaticResource CircleCheckBox}" Content="Defect" Background="White" Opacity="0.7" FontSize="20" FontWeight="Bold"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <Grid Margin="5" Width="400" Name="InfoGrid" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="0.8">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".4*"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <ContentPresenter RecognizesAccessKey="False"></ContentPresenter>

                    <Label Content="Model" BorderThickness="1" BorderBrush="Black" FontSize="20" 
                                    Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Label BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Column="1"
                           Background="White" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}">
                        <TextBlock Text= "{Binding CurrentModel.Name, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Label>

                    <Label Content="Lot" BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Row="1"
                           Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Label BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Column="1" Grid.Row="1"
                           Background="White" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}">
                        <TextBlock Text= "{Binding CurrentProduction.LotNo, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Label>

                    <Label Content="Count" BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Row="2"
                           Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Label BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Column="1" Grid.Row="2"
                           Background="White" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}">
                        <TextBlock Text="{Binding CurrentProduction.Count, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Label>

                    <Label Content="Scan" BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Row="3"
                           Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Label Name="ScanOperatorLabel" Grid.Column="1" BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Row="3"
                           Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"
                           Background="{Binding StateBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock Text= "{Binding OperatorState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Label>

                    <Label Content="Extract" BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Row="4"
                           Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Label Name="ExtractOperatorLabel" Grid.Row="4" Grid.Column="1" BorderThickness="1" BorderBrush="Black" FontSize="20"
                           Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"
                           Background="{Binding StateBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock Text= "{Binding OperatorState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Label>

                    <Label Content="Inspect" BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Row="5"
                           Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Label Name="InspectOperatorLabel" Grid.Column="1" Grid.Row="5"
                           BorderThickness="1" BorderBrush="Black" FontSize="20"
                           Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"
                           Background="{Binding StateBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock Text= "{Binding OperatorState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Label>

                    <Label Content="Storing" BorderThickness="1" BorderBrush="Black" FontSize="20" Grid.Row="6"
                           Background="{DynamicResource NormalBrush}" Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"/>
                    <Label Name="StoringOperatorLabel" Grid.Column="1" Grid.Row="6"
                           BorderThickness="1" BorderBrush="Black" FontSize="20"
                           Foreground="{DynamicResource FontBrush}" Style="{DynamicResource BasicLabel}"
                           Background="{Binding StateBrush, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock Text= "{Binding OperatorState, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Label>
                </Grid>
                <Image Name="LoadingImage" Margin="10" Source="pack://siteoforigin:,,,/Resources/Reset.png" Width="160" Height="160" Opacity="1">
                    <Image.RenderTransform>
                        <RotateTransform x:Name="rotation" CenterX="80" CenterY="80"/>
                    </Image.RenderTransform>
                </Image>
            </Grid>
        </DockPanel>
    </Grid>
</UserControl>
