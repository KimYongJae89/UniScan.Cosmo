<simpleChildWindow:ChildWindow x:Class="WPF.COSMO.Offline.Controls.View.MicroscopeWindow"
                               xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                               xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                               xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                               xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                               xmlns:local="clr-namespace:WPF.COSMO.Offline.Controls.ViewModel"
                               xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
                               xmlns:simpleChildWindow="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"
                               xmlns:usercontrols="clr-namespace:WPF.Base.Controls;assembly=WPF.Base"
                               xmlns:XCmd="clr-namespace:WPF.Base.Helpers.WPFXCommand;assembly=WPF.Base"
                               xmlns:services="clr-namespace:WPF.Base.Services;assembly=WPF.Base"
                               xmlns:converters="clr-namespace:WPF.Base.Converters;assembly=WPF.Base"
                               xmlns:vm="clr-namespace:WPF.COSMO.Offline.Controls.ViewModel"
                               mc:Ignorable="d"
                               Title="MicroscopeWindow"

                               Height="700"
                               MaxHeight="700"
                               d:DesignHeight="700">
    <simpleChildWindow:ChildWindow.Resources>
        <services:MouseWheelUpDown x:Key="MouseWheelUpDown"/>
        <converters:MultiBindingConverter x:Key="MultiBindingConverter"/>
        <converters:BooleanInverseConverter x:Key="BooleanInverseConverter"/>
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
            <Setter Property="Height" Value="50"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
        </Style>
        <Style x:Key="GroupHeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontSize" Value="{StaticResource MediumLargeFontSize}"/>
        </Style>
        <Style x:Key="ParamHeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontSize" Value="{StaticResource MediumLargeFontSize}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="{StaticResource XXSmallMargin}"/>
        </Style>
        <Style x:Key="ParamUnitTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="FontSize" Value="{StaticResource MediumLargeFontSize}"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="70"/>
            <Setter Property="Margin" Value="{StaticResource XXSmallMargin}"/>
        </Style>
    </simpleChildWindow:ChildWindow.Resources>
    <Grid  Margin="{StaticResource SmallLeftTopRightBottomMargin}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}"/>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <usercontrols:TitleTextBlock Grid.Row="0" Text="Image"/>
            <Grid Grid.Row="1" Width="{Binding Height, RelativeSource={RelativeSource AncestorType=simpleChildWindow:ChildWindow, Mode=FindAncestor} }">
                <Border Name="imageBorder">
                    <Border Padding="5" ClipToBounds="True" Background="Black"
                            XCmd:PreviewMouseLeftButtonDown.Command="{Binding ZoomService.LeftMouseDownCommand}"
                            XCmd:PreviewMouseLeftButtonUp.Command="{Binding ZoomService.LeftMouseUpCommand}"
                            XCmd:PreviewMouseRightButtonDown.Command="{Binding ZoomService.RightMouseDownCommand}"
                            XCmd:PreviewMouseRightButtonUp.Command="{Binding ZoomService.RightMouseUpCommand}"
                            XCmd:PreviewMouseMove.Command="{Binding ZoomService.MouseMoveCommand}">
                        <Border.InputBindings>
                            <MouseBinding Gesture="{StaticResource MouseWheelUpDown}"
                                          Command="{Binding ZoomService.WheelCommand}"
                                          CommandParameter="{Binding Gesture, RelativeSource={RelativeSource Mode=Self}}">
                            </MouseBinding>
                        </Border.InputBindings>
                        <Canvas Name="imageCanvas">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding ZoomService.Scale}"
                                                    ScaleY="{Binding ZoomService.Scale}"/>
                                    <TranslateTransform X="{Binding ZoomService.TranslateX}"
                                                        Y="{Binding ZoomService.TranslateY}"/>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Image Source="{Binding MicroscopeImage}"/>
                            <Rectangle Fill="Transparent" 
                                       Canvas.Left="{Binding DragRegion.Left}"
                                       Canvas.Top="{Binding DragRegion.Top}"
                                       Width="{Binding DragRegion.Width}"
                                       Height="{Binding DragRegion.Height}"
                                       Stroke="Red"
                                       StrokeThickness="1">
                            </Rectangle>
                        </Canvas>
                    </Border>
                </Border>
            </Grid>
        </Grid>
        <Grid Grid.Column="1" Margin="{StaticResource XSmallLeftMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <usercontrols:TitleTextBlock Grid.Row="0" Text="Clip_Image"
                                         Background="Transparent"/>
            <DataGrid Grid.Row="1"
                      Background="{DynamicResource GrayBrush10}"
                      ItemsSource="{Binding ClipImageList}"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserSortColumns="False"
                      CanUserResizeColumns="False"
                      CanUserReorderColumns="False"
                      IsReadOnly="True"
                      ColumnWidth="*"
                      SelectionUnit="FullRow"
                      FontSize="{StaticResource MediumFontSize}"
                      SelectedItem="{Binding SelectedDefect}"
                      AutoGenerateColumns="False"
                      CanUserResizeRows="False"
                      VerticalScrollBarVisibility="Visible">
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="{Binding Item3}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <UniformGrid Grid.Row="2" Columns="3">
                <Button Content="ADD" Command="{Binding AddClipCommand}"/>
                <Button Content="DELETE" Command="{Binding DeleteClipCommand}"/>
                <Button Content="CLEAR" Command="{Binding ClearClipCommand}"/>
            </UniformGrid>
        </Grid>
        <Grid Grid.Column="2" Margin="{StaticResource XSmallLeftMargin}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <usercontrols:TitleTextBlock Grid.Row="0" Text="Defect_List"
                                         Background="Transparent"/>
            <DataGrid Grid.Row="1"
                      Background="{DynamicResource GrayBrush10}"
                      ItemsSource="{Binding Defects}"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserSortColumns="False"
                      CanUserResizeColumns="False"
                      CanUserReorderColumns="False"
                      IsReadOnly="True"
                      ColumnWidth="*"
                      SelectionUnit="FullRow"
                      FontSize="{StaticResource MediumFontSize}"
                      AutoGenerateColumns="False"
                      CanUserResizeRows="False"
                      VerticalScrollBarVisibility="Visible"
                      SelectionMode="Single"
                      Name="DefectList"
                      KeyDown="DefectList_KeyDown">
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="{StaticResource XXSmallLeftRightMargin}" Text="{Binding Index}"
                                               VerticalAlignment="Center"/>
                                    <Image Source="{Binding Image}"
                                           Grid.Column="1"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button Content="Move" 
                    Command="{Binding MoveDefectCommand}"
                    CommandParameter="{Binding SelectedItem, ElementName=DefectList}"
                    Grid.Row="2"/>
        </Grid>
        <Grid Grid.Column="3" Margin="{StaticResource XSmallLeftMargin}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <usercontrols:TitleTextBlock Grid.Row="0" Text="Camera"/>
                <StackPanel Grid.Row="1" Background="{DynamicResource GrayBrush10}">
                    <UniformGrid Columns="3">
                        <TextBlock Text="Exposure" Style="{StaticResource ParamHeaderTextBlock}"/>
                        <mahapps:NumericUpDown Value="{Binding ExposureTime}" Minimum="0" Maximum="10000"/>
                        <TextBlock Text="ms" Style="{StaticResource ParamUnitTextBlock}"/>
                        <TextBlock Text="Focus" Style="{StaticResource ParamHeaderTextBlock}"/>
                        <mahapps:NumericUpDown Value="{Binding FocusValue, Mode=TwoWay}"
                                               StringFormat="N2"
                                               Minimum="{Binding MinCurrent}"
                                               Maximum="{Binding MaxCurrent}"/>
                        <Slider Value="{Binding FocusValue, Mode=TwoWay}"
                                Minimum="{Binding MinCurrent}"
                                Maximum="{Binding MaxCurrent}"/>
                    </UniformGrid>
                    <UniformGrid Columns="3">
                        <Button Content="Fit Image"
                                Command="{Binding FitToSizeCommand}"/>
                        <Button Content="Grab" IsEnabled="{Binding IsLiveGrabbing, Converter={StaticResource BooleanInverseConverter}}"
                                Command="{Binding GrabCommand}"/>
                        <ToggleButton Content="Live" IsChecked="{Binding IsLiveGrabbing, Mode=OneWayToSource}"
                                      Command="{Binding LiveGrabCommand}"
                                      IsEnabled="{Binding IsAutoFocus, Converter={StaticResource BooleanInverseConverter}}"
                                      CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}"/>
                    </UniformGrid>
                    <ToggleButton Content="Auto Focus" IsChecked="{Binding IsAutoFocus, Mode=OneWay}"
                                  IsEnabled="{Binding IsLive, Converter={StaticResource BooleanInverseConverter}}"
                                  Command="{Binding AutoFocusCommand}"
                                  CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Mode=Self}}"/>
                </StackPanel>
                <usercontrols:TitleTextBlock Grid.Row="2" Text="Light"/>
                <StackPanel Grid.Row="3" Background="{DynamicResource GrayBrush10}">
                    <Grid Margin="{StaticResource SmallLeftTopRightBottomMargin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Value" Style="{StaticResource ParamHeaderTextBlock}"/>
                        <mahapps:NumericUpDown Grid.Column="1" Minimum="0" Maximum="255"
                                               Value="{Binding LightValue}"/>
                        <TextBlock Grid.Column="2" Style="{StaticResource ParamUnitTextBlock}"/>
                    </Grid>
                </StackPanel>

                <usercontrols:TitleTextBlock Grid.Row="4" Text="Robot"/>
                <Grid Grid.Row="5" Background="{StaticResource GrayBrush10}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    
                    <Grid Grid.Row="1" Margin="{StaticResource SmallLeftTopRightBottomMargin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Speed" Style="{StaticResource ParamHeaderTextBlock}"/>
                        <mahapps:NumericUpDown Value="{Binding RobotSpeed}" Grid.Column="1" Minimum="0" Maximum="100"/>
                        <TextBlock Grid.Column="2" Text="mm/s" Style="{StaticResource ParamUnitTextBlock}"/>
                    </Grid>
                    <Grid  Grid.Row="2" Margin="{StaticResource SmallLeftTopRightBottomMargin}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton Grid.Column="0" Content="Jog"
                                      Width="70"
                                      IsChecked="{Binding IsJogMode}"
                                      VerticalAlignment="Center"/>
                        <ToggleButton Grid.Column="1" Content="Step"
                                      Width="70"
                                      IsChecked="{Binding IsJogMode, Converter={StaticResource BooleanInverseConverter}}"
                                      VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="2" IsEditable="True" Text="{Binding StepMoveDistance}"
                                  IsEnabled="{Binding IsJogMode, Converter={StaticResource BooleanInverseConverter}}"
                                  ItemsSource="{Binding StepDistanceList}"
                                  SelectedValue="{Binding StepMoveDistanceMM}"/>
                        <TextBlock Grid.Column="3" Text="mm" Style="{StaticResource ParamUnitTextBlock}"/>
                    </Grid>
                    <Grid Grid.Row="3" Margin="{StaticResource SmallLeftTopRightBottomMargin}">
                        <usercontrols:GlyphButton Glyph="&#xF0B0;"
                                                  FontSize="{StaticResource MediumLargeFontSize}"
                                                  XCmd:PreviewMouseLeftButtonDown.Command="{Binding LeftMoveStartCommand}"
                                                  XCmd:PreviewMouseLeftButtonUp.Command="{Binding MoveEndCommand}"
                                                  Width="70" Height="70" Margin="-150,0,0,0"/>
                        <usercontrols:GlyphButton Glyph="&#xF0AF;"
                                                  FontSize="{StaticResource MediumLargeFontSize}"
                                                  XCmd:PreviewMouseLeftButtonDown.Command="{Binding RightMoveStartCommand}"
                                                  XCmd:PreviewMouseLeftButtonUp.Command="{Binding MoveEndCommand}"
                                                  Width="70" Height="70" Margin="150,0,0,0"/>
                        <usercontrols:GlyphButton Glyph="&#xF0AD;"
                                                  FontSize="{StaticResource MediumLargeFontSize}"
                                                  XCmd:PreviewMouseLeftButtonDown.Command="{Binding TopMoveStartCommand}"
                                                  XCmd:PreviewMouseLeftButtonUp.Command="{Binding MoveEndCommand}"
                                                  Width="70" Height="70" Margin="0,-75,0,0"/>
                        <usercontrols:GlyphButton Glyph="&#xF0AE;"
                                                  FontSize="{StaticResource MediumLargeFontSize}"
                                                  XCmd:PreviewMouseLeftButtonDown.Command="{Binding BottomMoveStartCommand}"
                                                  XCmd:PreviewMouseLeftButtonUp.Command="{Binding MoveEndCommand}"
                                                  Width="70" Height="70" Margin="0,75,0,0"/>
                    </Grid>
                </Grid>

                <UniformGrid Grid.Row="6" Columns="2">
                    <Button Content="Save Result"
                        Command="{Binding SaveResultCommand}"/> 
                    <Button Content="Close" 
                            Command="{Binding CloseCommand}"/>
                </UniformGrid>
            </Grid>
        </Grid>
    </Grid>
</simpleChildWindow:ChildWindow>
